# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

name: $(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
- dev

pool:
  vmImage: 'ubuntu-latest'
variables:
  scratch_org_username: $(Build.BuildNumber)@provartesting.com
steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
    checkLatest: true
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install'

- script: |
    npm install -g sfdx-cli
    npm install -g yarn
    npm install openssl-nodejs
  displayName: 'Node Install: sfdx-cli, yarn, and openssl'
  
# - bash: |
#     ## Setup to install latest chromium
#     sudo apt -y update && sudo apt install -y
#     sudo wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
#     sudo echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list 
#     sudo apt update -y && apt install -y -qq google-chrome-stable google-chrome-beta 
#   displayName: 'Install Chromium'  

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      cd com.provar.plugins.provardx
      sfdx plugins:link
  displayName: 'Link ProvarDX SFDX plugins with SFDX'

- bash: |
    cd com.provar.plugins.provardx
    yarn run prepack
  displayName: 'Execute yarn command prepack available in package.json file'

- bash: |
    sfdx force:project:create -n ProvarDX
    cp project-scratch-def.json ProvarDX/config/project-scratch-def.json
    cp package.xml ProvarDX/package.xml
    cp .forceignore ProvarDX/.forceignore
  displayName: 'Creates SFDX Project with some sample configuration files'

- bash: |
    openssl aes-256-cbc -k $(key_password) -md md5 -in assets/server.key.enc -out assets/server.key -d
    sfdx force:auth:jwt:grant --clientid $(consumer_key) --jwtkeyfile assets/server.key --username $(dev_hub_username) --setdefaultdevhubusername --setalias $(dev_hub_alias)
  displayName: 'Authenticates to Dev Hub Org'

- bash: |
    sfdx force:org:list --clean
  displayName: 'Cleans stale Org authentications'

- task: ShellScript@2
  inputs:
    scriptPath: create_connection_overrides.sh
    args: $(scratch_org_username)
  displayName: 'Copy Scratch Org user to property file'

- bash: |
    sfdx force:org:create -f ProvarDX/config/project-scratch-def.json username=$(scratch_org_username) -a $(scratch_org_alias)
    sfdx force:org:display -u $(scratch_org_username)
  displayName: 'Create Scratch Org and Org description'

- bash: |
    cd ProvarDX
    sfdx force:mdapi:retrieve -r ./package -u $(dev_hub_username) -k ./package.xml
    unzip ./package/unpackaged.zip
    sfdx force:mdapi:convert --rootdir unpackaged --outputdir force-app
    sfdx force:source:push -u $(scratch_org_username)
  displayName: 'Update Scratch Org Admin Profile'

- bash: |
    echo "Install Provar"
    wget -nv https://download.provartesting.com/latest/Provar_ANT_latest.zip
    unzip -q Provar_ANT_latest.zip -d /home/vsts/work/1/s/ProvarHome
    export PROVAR_HOME=/home/vsts/work/1/s/ProvarHome
    cp -r /home/vsts/work/1/s/ProvarProject/provardx $PROVAR_HOME/provardx
    cd /home/vsts/work/1/s/ProvarHome
    ls -la
  displayName: 'Install Provar'

- bash: |
    cd com.provar.plugins.provardx
    sfdx provar:validate
  displayName: 'Validate ProvarDX property file'

# - bash: |
#     cd com.provar.plugins.provardx
#     sfdx provar:compile -p provardx-properties.json
#   displayName: 'Compile Provar Tests'

# - bash: |
#     cd com.provar.plugins.provardx
#     sfdx provar:metadatacache -m 'refresh' -c '/home/vsts/work/1/s/.provarCaches' -p 'provardx-properties.json'
#   displayName: 'Refresh Metadata Cache for SF'

- bash: |
    cd com.provar.plugins.provardx 
    sfdx provar:runtests -p provardx-properties.json
  displayName: 'Run Provar Tests'

- bash: |
    sfdx force:org:delete -a $(scratch_org_alias)