<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase guid="061ad674-81db-4c61-9d12-2dfb01dec5ec" id="4">
  <summary/>
  <steps>
    <caseCall guid="5154e0b4-ecbb-4642-8c3d-c5ae4f70feba" testCaseId="b43b24f5-1936-4d84-ac49-ae9b0aebbe61" testCasePath="tests/Regression/Account/CreateNewAccount.testcase" testItemId="13">
      <arguments>
        <argument id="AccountName">
          <value class="compound">
            <parts>
              <value valueClass="string">Smoke </value>
              <funcCall id="UniqueId">
                <argument id="length">
                  <value class="value" valueClass="decimal">6</value>
                </argument>
              </funcCall>
            </parts>
          </value>
        </argument>
        <argument id="AccountPhone">
          <value class="compound">
            <parts>
              <funcCall id="UniqueId">
                <argument id="length">
                  <value class="value" valueClass="decimal">3</value>
                </argument>
                <argument id="format">
                  <value class="variable">
                    <path element="NUMERIC"/>
                  </value>
                </argument>
              </funcCall>
              <value valueClass="string">-</value>
              <funcCall id="UniqueId">
                <argument id="length">
                  <value class="value" valueClass="decimal">3</value>
                </argument>
                <argument id="format">
                  <value class="variable">
                    <path element="NUMERIC"/>
                  </value>
                </argument>
              </funcCall>
              <value valueClass="string">-</value>
              <funcCall id="UniqueId">
                <argument id="length">
                  <value class="value" valueClass="decimal">4</value>
                </argument>
                <argument id="format">
                  <value class="variable">
                    <path element="NUMERIC"/>
                  </value>
                </argument>
              </funcCall>
            </parts>
          </value>
        </argument>
        <argument id="Website">
          <value class="value" valueClass="string">testing.com</value>
        </argument>
        <argument id="reuseConnectionName">
          <value class="value" valueClass="string">Admin</value>
        </argument>
        <argument id="Lightning">
          <value class="value" valueClass="boolean">true</value>
        </argument>
      </arguments>
      <outputArguments>
        <outputArgument id="accountId">
          <name class="value" valueClass="string">accountId</name>
        </outputArgument>
      </outputArguments>
    </caseCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" guid="9afede02-d7e7-4b09-a546-a3965530798e" name="SetValues" testItemId="7" title="Set Values: Website">
      <associations>
        <association assocationType="TM.TEST_STEP" connectionId="55d392f7-ccc9-4c71-aa4e-33aa895ddd53" entityKey="a0b8d00000BAkVqAAL"/>
      </associations>
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">AccountName</value>
              </namedValue>
              <namedValue name="value">
                <value class="compound">
                  <parts>
                    <value valueClass="string">ProvarDX </value>
                    <funcCall id="UniqueId">
                      <argument id="length">
                        <value class="value" valueClass="decimal">6</value>
                      </argument>
                    </funcCall>
                  </parts>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">AccountPhone</value>
              </namedValue>
              <namedValue name="value">
                <value class="compound">
                  <parts>
                    <funcCall id="UniqueId">
                      <argument id="length">
                        <value class="value" valueClass="decimal">3</value>
                      </argument>
                      <argument id="format">
                        <value class="variable">
                          <path element="NUMERIC"/>
                        </value>
                      </argument>
                    </funcCall>
                    <value valueClass="string">-</value>
                    <funcCall id="UniqueId">
                      <argument id="length">
                        <value class="value" valueClass="decimal">3</value>
                      </argument>
                      <argument id="format">
                        <value class="variable">
                          <path element="NUMERIC"/>
                        </value>
                      </argument>
                    </funcCall>
                    <value valueClass="string">-</value>
                    <funcCall id="UniqueId">
                      <argument id="length">
                        <value class="value" valueClass="decimal">4</value>
                      </argument>
                      <argument id="format">
                        <value class="variable">
                          <path element="NUMERIC"/>
                        </value>
                      </argument>
                    </funcCall>
                  </parts>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">Website</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">tonsoftesting.com</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.restservice.WebConnect" guid="f79639a7-10b0-47da-ac06-eb111af09d90" name="WebConnect" testItemId="12" title="Web Connect: SF_Rest">
      <associations>
        <association assocationType="TM.TEST_STEP" connectionId="55d392f7-ccc9-4c71-aa4e-33aa895ddd53" entityKey="a0b8d00000BAkjBAAT"/>
      </associations>
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">SF_Rest</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">SF_Rest</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.restservice.RestRequest" guid="19c8bdc5-222f-480c-98fd-4f1e7dc18f2c" name="RestRequest" testItemId="2" title="Web Request (REST): â‡’AccountResponse">
      <tags/>
      <associations>
        <association assocationType="TM.TEST_STEP" connectionId="55d392f7-ccc9-4c71-aa4e-33aa895ddd53" entityKey="a0b8d00000BAkjCAAT"/>
      </associations>
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">SF_Rest</value>
        </argument>
        <argument id="targetValue">
          <value class="restTarget" uri="rest:untyped?method=GET&amp;bodyStyle=JSON"/>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">AccountResponse</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="statusResultName">
          <value class="value" valueClass="string">RestResponseStatus</value>
        </argument>
        <argument id="restResourceUrl">
          <value class="compound">
            <parts>
              <variable>
                <path element="sandboxURL"/>
              </variable>
              <value valueClass="string">/services/data/v48.0/query/?q=SELECT+NAME,PHONE+FROM+ACCOUNT+WHERE+ID='</value>
              <variable>
                <path element="accountId"/>
              </variable>
              <value valueClass="string">'</value>
            </parts>
          </value>
        </argument>
        <argument id="restRequestHeader">
          <value class="compound">
            <parts>
              <value valueClass="string">Authorization: Bearer </value>
              <variable>
                <path element="sessionID"/>
              </variable>
            </parts>
          </value>
        </argument>
        <argument id="restBody">
          <value class="value" valueClass="string">{\n\t"Name": "ProvarDX Test Account"\n}</value>
        </argument>
        <argument id="restAttachments">
          <value class="valueList" mutable="Mutable"/>
        </argument>
      </arguments>
      <generatedParameters>
        <apiParam group="request" internal="true" name="restResourceUrl" title="Resource URL">
          <type>
            <textType/>
          </type>
        </apiParam>
        <apiParam group="header" internal="true" name="restRequestHeader" passwordVariableAllowed="true" title="Request Header">
          <type>
            <textType/>
          </type>
        </apiParam>
      </generatedParameters>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" guid="6b34fa19-9c78-47ae-8c1a-5089be9b7b9a" name="AssertValues" testItemId="3" title="Assert: 200 EqualTo {RestResponseStatus.StatusCode}">
      <tags/>
      <associations>
        <association assocationType="TM.TEST_STEP" connectionId="55d392f7-ccc9-4c71-aa4e-33aa895ddd53" entityKey="a0b8d00000BAkjDAAT"/>
      </associations>
      <arguments>
        <argument id="expectedValue">
          <value class="value" valueClass="string">200</value>
        </argument>
        <argument id="actualValue">
          <value class="variable">
            <path element="RestResponseStatus"/>
            <path element="StatusCode"/>
          </value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="numeric">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" guid="d3e59080-85b8-42d2-bfb5-a1ae35123474" name="AssertValues" testItemId="11" title="Assert: {true} EqualTo {AccountResponse.done}">
      <tags/>
      <associations>
        <association assocationType="TM.TEST_STEP" connectionId="55d392f7-ccc9-4c71-aa4e-33aa895ddd53" entityKey="a0b8d00000BAkjEAAT"/>
      </associations>
      <arguments>
        <argument id="expectedValue">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="actualValue">
          <value class="variable">
            <path element="AccountResponse"/>
            <path element="done"/>
          </value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="numeric">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" guid="349c0a59-321a-4b2a-b1e0-6ec3e2417379" name="AssertValues" testItemId="8" title="Assert: 1 EqualTo {AccountResponse.totalSize}">
      <tags/>
      <associations>
        <association assocationType="TM.TEST_STEP" connectionId="55d392f7-ccc9-4c71-aa4e-33aa895ddd53" entityKey="a0b8d00000BAkjFAAT"/>
      </associations>
      <arguments>
        <argument id="expectedValue">
          <value class="value" valueClass="string">1</value>
        </argument>
        <argument id="actualValue">
          <value class="variable">
            <path element="AccountResponse"/>
            <path element="totalSize"/>
          </value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="numeric">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" guid="ec780919-b311-4059-96b1-554901bc7d25" name="AssertValues" testItemId="9" title="Assert: {AccountName} EqualTo {AccountResponse.records[1].Name}">
      <tags/>
      <associations>
        <association assocationType="TM.TEST_STEP" connectionId="55d392f7-ccc9-4c71-aa4e-33aa895ddd53" entityKey="a0b8d00000BAkjGAAT"/>
      </associations>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="AccountName"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="variable">
            <path element="AccountResponse"/>
            <path element="records">
              <filter class="index">
                <index valueClass="decimal">0</index>
              </filter>
            </path>
            <path element="Name"/>
          </value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="numeric">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" guid="7a21753f-8d2e-4191-b35e-dd11934b3074" name="AssertValues" testItemId="4" title="Assert: {AccountPhone} EqualTo {AccountResponse.records[1].Phone}">
      <tags/>
      <associations>
        <association assocationType="TM.TEST_STEP" connectionId="55d392f7-ccc9-4c71-aa4e-33aa895ddd53" entityKey="a0b8d00000BAkjHAAT"/>
      </associations>
      <arguments>
        <argument id="expectedValue">
          <value class="variable">
            <path element="AccountPhone"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="variable">
            <path element="AccountResponse"/>
            <path element="records">
              <filter class="index">
                <index valueClass="decimal">0</index>
              </filter>
            </path>
            <path element="Phone"/>
          </value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="numeric">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage"/>
      </arguments>
    </apiCall>
  </steps>
  <associations>
    <association assocationType="TM.TEST_CASE" connectionId="55d392f7-ccc9-4c71-aa4e-33aa895ddd53" entityKey="a0R8d000007vLgaEAE" lastModifiedDateTime="2023-03-10T16:01:17Z"/>
  </associations>
</testCase>
