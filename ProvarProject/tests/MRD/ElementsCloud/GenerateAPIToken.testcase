<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="4" registryId="b1e85df2-ccc7-4d58-92e9-99ddb28bd591" visibility="Internal">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.bundled.apis.If" name="If" testItemId="8" title="If: {Not(Connected) OR Connected = null}">
      <arguments>
        <argument id="condition">
          <value class="or">
            <lhs class="funcCall" id="Not">
              <argument id="value">
                <value class="variable">
                  <path element="Connected"/>
                </value>
              </argument>
            </lhs>
            <rhs class="eq">
              <lhs class="variable">
                <path element="Connected"/>
              </lhs>
            </rhs>
          </value>
        </argument>
      </arguments>
      <expectedExceptions/>
      <clauses>
        <clause name="then" testItemId="9">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.restservice.WebConnect" name="WebConnect" testItemId="2" title="Web Connect: ElementsCloud_API">
              <arguments>
                <argument id="connectionName">
                  <value class="value" valueClass="string">ElementsCloud_API</value>
                </argument>
                <argument id="resultName">
                  <value class="value" valueClass="string">ElementsCloud_API</value>
                </argument>
                <argument id="resultScope">
                  <value class="value" valueClass="string">Global</value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="7" title="Set Values: Connected">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">EmailURI</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="funcCall" id="StringReplace">
                          <argument id="sourceString">
                            <value class="variable">
                              <path element="Email"/>
                            </value>
                          </argument>
                          <argument id="findString">
                            <value class="value" valueClass="string">@</value>
                          </argument>
                          <argument id="replacementString">
                            <value class="value" valueClass="string">%40</value>
                          </argument>
                        </value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Folder</value>
                      </namedValue>
                    </namedValues>
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">Version</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="value" valueClass="string">v1</value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Global</value>
                      </namedValue>
                    </namedValues>
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">Connected</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="value" valueClass="boolean">true</value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Global</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.restservice.RestRequest" name="RestRequest" testItemId="3" title="Web Request (HTTP/REST): â‡’APIToken">
              <arguments>
                <argument id="connectionName">
                  <value class="value" valueClass="string">ElementsCloud_API</value>
                </argument>
                <argument id="targetValue">
                  <value class="restTarget" uri="rest:untyped?method=POST&amp;bodyStyle=JSON"/>
                </argument>
                <argument id="resultName">
                  <value class="value" valueClass="string">APIToken</value>
                </argument>
                <argument id="resultScope">
                  <value class="value" valueClass="string">Test</value>
                </argument>
                <argument id="statusResultName">
                  <value class="value" valueClass="string">APITokenStatus</value>
                </argument>
                <argument id="restResourceUrl">
                  <value class="compound">
                    <parts>
                      <value valueClass="string">/</value>
                      <variable>
                        <path element="Version"/>
                      </variable>
                      <value valueClass="string">/auth?email=</value>
                      <variable>
                        <path element="EmailURI"/>
                      </variable>
                      <value valueClass="string">&amp;password=</value>
                      <variable>
                        <path element="Password"/>
                      </variable>
                    </parts>
                  </value>
                </argument>
                <argument id="restRequestHeader"/>
                <argument id="restBody"/>
                <argument id="restAttachments">
                  <value class="valueList" mutable="Mutable"/>
                </argument>
              </arguments>
              <generatedParameters>
                <apiParam group="request" internal="true" name="restResourceUrl" title="Resource URL">
                  <type>
                    <textType/>
                  </type>
                </apiParam>
                <apiParam group="header" internal="true" name="restRequestHeader" title="Request Header">
                  <type>
                    <textType/>
                  </type>
                </apiParam>
                <apiParam group="body" name="restBody" title="Body">
                  <type>
                    <textType>
                      <constraints>
                        <valueConstraint name="mimeType">application/json</valueConstraint>
                      </constraints>
                    </textType>
                  </type>
                </apiParam>
                <compoundApiParam group="attachments" list="true" name="restAttachments" title="Attachment">
                  <childParams>
                    <apiParam name="name" title="Attachment Name"/>
                    <apiParam name="fileName" title="File Name"/>
                    <apiParam name="contentType" title="Content Type">
                      <type>
                        <choiceType>
                          <constraints>
                            <valueConstraint name="valuesSource">com.provar.core.model.base.java.EnumChoiceListValuesSource</valueConstraint>
                            <valueConstraint name="valuesSourceDependencies">com.provar.core.model.base.api.MimeContentType</valueConstraint>
                          </constraints>
                        </choiceType>
                      </type>
                    </apiParam>
                    <apiParam name="data" title="Data">
                      <type>
                        <urlType/>
                      </type>
                    </apiParam>
                    <apiParam name="base64Encode" title="Encode As Base64">
                      <type>
                        <booleanType/>
                      </type>
                    </apiParam>
                  </childParams>
                </compoundApiParam>
              </generatedParameters>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="5" title="Assert: 200 EqualTo {APITokenStatus.StatusCode}">
              <arguments>
                <argument id="expectedValue">
                  <value class="value" valueClass="string">200</value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="APITokenStatus"/>
                    <path element="StatusCode"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="6" title="Assert: {APIToken.token} IsPresent ">
              <arguments>
                <argument id="expectedValue">
                  <value class="variable">
                    <path element="APIToken"/>
                    <path element="token"/>
                  </value>
                </argument>
                <argument id="actualValue"/>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">IsPresent</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="1" title="Set Values: ElTeamId">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">AuthHeader</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="compound">
                          <parts>
                            <value valueClass="string">Authorization: token </value>
                            <variable>
                              <path element="APIToken"/>
                              <path element="token"/>
                            </variable>
                          </parts>
                        </value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Folder</value>
                      </namedValue>
                    </namedValues>
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">ElTeam</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="variable">
                          <path element="Team">
                            <filter class="index">
                              <index valueClass="decimal">0</index>
                            </filter>
                          </path>
                          <path element="ElTeam"/>
                        </value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">ElTeamId</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="variable">
                          <path element="Team">
                            <filter class="index">
                              <index valueClass="decimal">0</index>
                            </filter>
                          </path>
                          <path element="ElTeamId"/>
                        </value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
              <parameterValueSources>
                <parameterValueSource variableName="Team" variableScope="Test">
                  <cacheToken>C:/Users/16156/Provar/Workspaces/SeleniumGrid Demo/SeleniumGrid/templates/ElementsCloud.xlsx;1565106683412</cacheToken>
                  <cachedParameters>
                    <apiParam name="RowNumber"/>
                    <apiParam name="ElTeam"/>
                    <apiParam name="ElTeamId"/>
                  </cachedParameters>
                  <sourceValue class="excelTarget" namesLocation="FirstRowOfRange" whereComparison="EqualTo">
                    <workbookPath class="value" valueClass="string">templates/ElementsCloud.xlsx</workbookPath>
                    <worksheetName class="value" valueClass="string">Team</worksheetName>
                    <valuesRange class="value" valueClass="string">A1:B2</valuesRange>
                  </sourceValue>
                </parameterValueSource>
              </parameterValueSources>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
  </steps>
  <params/>
  <outputParams>
    <param defaultScope="Test" name="AuthHeader" title="AuthHeader">
      <summary>The name of the value to be set.  May contain sub-values, e.g. 'Value1.SubValue1'.</summary>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
      <sourceValue class="variable">
        <path element="AuthHeader"/>
      </sourceValue>
    </param>
    <param name="ElTeam" title="ElTeam">
      <summary>The name of the value to be set.  May contain sub-values, e.g. 'Value1.SubValue1'.</summary>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
      <sourceValue class="variable">
        <path element="ElTeam"/>
      </sourceValue>
    </param>
    <param name="ElTeamId" title="ElTeamId">
      <summary>The name of the value to be set.  May contain sub-values, e.g. 'Value1.SubValue1'.</summary>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
      <sourceValue class="variable">
        <path element="ElTeamId"/>
      </sourceValue>
    </param>
  </outputParams>
  <args/>
  <outputArgs>
    <outputArgument id="AuthHeader">
      <name class="value" valueClass="string">AuthHeader</name>
    </outputArgument>
    <outputArgument id="ElTeam">
      <name class="value" valueClass="string">ElTeam</name>
    </outputArgument>
    <outputArgument id="ElementsCloudConnection">
      <name class="value" valueClass="string">ElementsCloudConnection</name>
    </outputArgument>
    <outputArgument id="ElTeamId">
      <name class="value" valueClass="string">ElTeamId</name>
    </outputArgument>
  </outputArgs>
</testCase>
