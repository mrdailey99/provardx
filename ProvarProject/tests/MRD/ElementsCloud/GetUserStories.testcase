<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="52" registryId="8d8ad80b-c905-476b-9a7a-2fa028487f5e" visibility="Internal">
  <summary/>
  <steps>
    <caseCall testCaseId="b1e85df2-ccc7-4d58-92e9-99ddb28bd591" testCasePath="tests/MRD/ElementsCloud/GenerateAPIToken.testcase" testItemId="24">
      <outputArguments>
        <outputArgument id="AuthHeader">
          <name class="value" valueClass="string">AuthHeader</name>
        </outputArgument>
        <outputArgument id="ElTeam">
          <name class="value" valueClass="string">ElTeam</name>
        </outputArgument>
        <outputArgument id="ElTeamId">
          <name class="value" valueClass="string">ElTeamId</name>
        </outputArgument>
      </outputArguments>
    </caseCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.restservice.RestRequest" name="RestRequest" testItemId="1" title="Web Request (HTTP/REST): â‡’UserStories">
      <arguments>
        <argument argId="4186e1a6-c2cb-478b-824a-93e6ac7b3e5e" id="connectionName">
          <value class="value" valueClass="string">ElementsCloud_API</value>
        </argument>
        <argument id="targetValue">
          <value class="restTarget" uri="rest:untyped?method=GET&amp;bodyStyle=JSON"/>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">UserStories</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="statusResultName">
          <value class="value" valueClass="string">UserStoriesStatus</value>
        </argument>
        <argument id="restResourceUrl">
          <value class="compound">
            <parts>
              <value valueClass="string">/</value>
              <variable>
                <path element="Version"/>
              </variable>
              <value valueClass="string">/stories?sort=storyId%20DESC&amp;state=</value>
              <variable>
                <path element="State"/>
              </variable>
              <value valueClass="string">&amp;limit=</value>
              <variable>
                <path element="Limit"/>
              </variable>
              <value valueClass="string">&amp;skip=</value>
              <variable>
                <path element="Skip"/>
              </variable>
            </parts>
          </value>
        </argument>
        <argument id="restRequestHeader">
          <value class="variable">
            <path element="AuthHeader"/>
          </value>
        </argument>
      </arguments>
      <generatedParameters>
        <apiParam group="request" internal="true" name="restResourceUrl" title="Resource URL">
          <type>
            <textType/>
          </type>
        </apiParam>
        <apiParam group="header" internal="true" name="restRequestHeader" title="Request Header">
          <type>
            <textType/>
          </type>
        </apiParam>
      </generatedParameters>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="16" title="Assert: 200 EqualTo {UserStoriesStatus.StatusCode}">
      <arguments>
        <argument id="expectedValue">
          <value class="value" valueClass="string">200</value>
        </argument>
        <argument id="actualValue">
          <value class="variable">
            <path element="UserStoriesStatus"/>
            <path element="StatusCode"/>
          </value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="numeric">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="15" title="Assert: OK EqualTo {UserStoriesStatus.ResponseMessage}">
      <arguments>
        <argument id="expectedValue">
          <value class="value" valueClass="string">OK</value>
        </argument>
        <argument id="actualValue">
          <value class="variable">
            <path element="UserStoriesStatus"/>
            <path element="ResponseMessage"/>
          </value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="numeric">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="17" title="Assert: 0 LessThanOrEqualTo {UserStories.total}">
      <arguments>
        <argument id="expectedValue">
          <value class="value" valueClass="string">0</value>
        </argument>
        <argument id="actualValue">
          <value class="variable">
            <path element="UserStories"/>
            <path element="total"/>
          </value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">LessThanOrEqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="numeric">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage"/>
      </arguments>
    </apiCall>
  </steps>
  <params>
    <param name="AuthHeader" title="AuthHeader">
      <summary/>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
    <param name="State" title="State">
      <summary/>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
    <param name="Limit" title="Limit">
      <summary/>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
    <param name="Skip" title="Skip">
      <summary/>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
  </params>
  <outputParams>
    <param name="UserStories" title="UserStories">
      <summary>The name that the response will be stored under.</summary>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
      <sourceValue class="variable">
        <path element="UserStories"/>
      </sourceValue>
    </param>
    <param name="UserStoriesStatus" title="UserStoriesStatus">
      <summary>The status that the response status will be stored under.</summary>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
      <sourceValue class="variable">
        <path element="UserStoriesStatus"/>
      </sourceValue>
    </param>
  </outputParams>
  <args>
    <argument id="AuthHeader">
      <value class="value" valueClass="string">AuthHeader</value>
    </argument>
    <argument id="State">
      <value class="value" valueClass="string">Active</value>
    </argument>
    <argument id="Limit">
      <value class="value" valueClass="string">10</value>
    </argument>
    <argument id="Skip">
      <value class="value" valueClass="string">0</value>
    </argument>
  </args>
  <outputArgs>
    <outputArgument id="UserStories">
      <name class="value" valueClass="string">UserStories</name>
    </outputArgument>
    <outputArgument id="UserStoriesStatus">
      <name class="value" valueClass="string">UserStoriesStatus</name>
    </outputArgument>
  </outputArgs>
</testCase>
