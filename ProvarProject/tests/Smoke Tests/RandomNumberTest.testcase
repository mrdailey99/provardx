<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="28">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="3" title="Set Values: ListValues">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">ListValues</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">1,2,3,4,5,6,7,8,9</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.string.Split" name="Split" testItemId="4" title="Split: {ListValues}=&gt;,=&gt;Numbers">
      <arguments>
        <argument id="input">
          <value class="variable">
            <path element="ListValues"/>
          </value>
        </argument>
        <argument id="separator">
          <value class="value" valueClass="string">,</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">Numbers</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.ForEach" name="ForEach" testItemId="1" title="For Each: {Numbers}=&gt;Number">
      <arguments>
        <argument id="list">
          <value class="variable">
            <path element="Numbers"/>
          </value>
        </argument>
        <argument id="fromItem">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="valueName">
          <value class="value" valueClass="string">Number</value>
        </argument>
        <argument id="continueOnFailure">
          <value class="value" valueClass="boolean">true</value>
        </argument>
      </arguments>
      <clauses>
        <clause name="substeps" testItemId="2">
          <steps>
            <apiCall apiId="customapis.MathPower" name="MathPower" testItemId="19" title="Math Power: ⇒ Exponential">
              <arguments>
                <argument id="base">
                  <value class="value" valueClass="decimal">10</value>
                </argument>
                <argument id="exponent">
                  <value class="variable">
                    <path element="Number"/>
                  </value>
                </argument>
                <argument id="resultName">
                  <value class="value" valueClass="string">Exponential</value>
                </argument>
                <argument id="resultScope">
                  <value class="value" valueClass="string">Test</value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="customapis.RandomInteger" name="RandomInteger" testItemId="9" title="Random Integer: ⇒ IncludingZero">
              <arguments>
                <argument id="NumberOfDigits">
                  <value class="variable">
                    <path element="Number"/>
                  </value>
                </argument>
                <argument id="ExcludeZero"/>
                <argument id="resultName">
                  <value class="value" valueClass="string">IncludingZero</value>
                </argument>
                <argument id="resultScope">
                  <value class="value" valueClass="string">Test</value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="10" title="Assert: 0 LessThanOrEqualTo {IncludingZero}">
              <arguments>
                <argument id="expectedValue">
                  <value class="value" valueClass="string">0</value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="IncludingZero"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">LessThanOrEqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="17" title="Assert: {Exponential} GreaterThan {IncludingZero}">
              <arguments>
                <argument id="expectedValue">
                  <value class="variable">
                    <path element="Exponential"/>
                  </value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="IncludingZero"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">GreaterThan</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="customapis.RandomInteger" name="RandomInteger" testItemId="8" title="Random Integer: ⇒ ExcludingZero">
              <arguments>
                <argument id="NumberOfDigits">
                  <value class="variable">
                    <path element="Number"/>
                  </value>
                </argument>
                <argument id="ExcludeZero">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="resultName">
                  <value class="value" valueClass="string">ExcludingZero</value>
                </argument>
                <argument id="resultScope">
                  <value class="value" valueClass="string">Test</value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="11" title="Assert: 0 LessThan {ExcludingZero}">
              <arguments>
                <argument id="expectedValue">
                  <value class="value" valueClass="string">0</value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="ExcludingZero"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">LessThan</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="18" title="Assert: {Exponential} GreaterThan {Number}">
              <arguments>
                <argument id="expectedValue">
                  <value class="variable">
                    <path element="Exponential"/>
                  </value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="Number"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">GreaterThan</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
  </steps>
</testCase>
