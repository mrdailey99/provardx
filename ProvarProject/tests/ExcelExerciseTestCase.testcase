<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="3">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexConnect" name="ApexConnect" testItemId="1" title="Salesforce Connect: Admin (Test)">
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">Admin</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">Admin</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="uiApplicationName"/>
        <argument id="quickUiLogin">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="closeAllPrimaryTabs">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="reuseConnectionName"/>
        <argument id="alreadyOpenBehaviour">
          <value class="value" valueClass="string">Fail</value>
        </argument>
        <argument id="privateBrowsingMode"/>
        <argument id="enableObjectIdLogging">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="autoCleanup"/>
        <argument id="cleanupConnectionName"/>
        <argument id="logFileLocation"/>
        <argument id="username"/>
        <argument id="password"/>
        <argument id="securityToken"/>
        <argument id="environment"/>
        <argument id="lightningMode">
          <value class="value" valueClass="string">default</value>
        </argument>
        <argument id="webBrowser"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.ForEach" name="ForEach" testItemId="2" title="For Each: {AccountData}=&gt;Row">
      <arguments>
        <argument id="list">
          <value class="variable">
            <path element="AccountData"/>
          </value>
        </argument>
        <argument id="fromItem">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="valueName">
          <value class="value" valueClass="string">Row</value>
        </argument>
        <argument id="continueOnFailure"/>
      </arguments>
      <parameterValueSources>
        <parameterValueSource variableName="AccountData" variableScope="Test">
          <cacheToken>/Users/clint.daniel/Provar/Demo/demo/templates/ExerciseData.xlsx;1551197038000</cacheToken>
          <cachedParameters>
            <apiParam name="Name"/>
            <apiParam name="CustomerPriority__c"/>
            <apiParam name="SLA__c"/>
          </cachedParameters>
          <sourceValue class="excelTarget" namesLocation="FirstRowOfRange" whereComparison="EqualTo">
            <workbookPath class="value" valueClass="string">templates/ExerciseData.xlsx</workbookPath>
            <worksheetName class="value" valueClass="string">AccountData</worksheetName>
            <valuesRange class="value"/>
          </sourceValue>
        </parameterValueSource>
      </parameterValueSources>
      <clauses>
        <clause name="substeps" testItemId="3">
          <steps>
            <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexCreateObject" name="ApexCreateObject" parameterGeneratorUri="command:com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand" testItemId="4" title="Create Object: Account=&gt;AccountId">
              <arguments>
                <argument id="objectType">
                  <value class="value" valueClass="string">Account</value>
                </argument>
                <argument id="resultIdName">
                  <value class="value" valueClass="string">AccountId</value>
                </argument>
                <argument id="apexConnectionName">
                  <value class="value" valueClass="string">Admin</value>
                </argument>
                <argument id="assignmentRuleId"/>
                <argument id="resultScope">
                  <value class="value" valueClass="string">Test</value>
                </argument>
                <argument id="Name">
                  <value class="compound">
                    <parts>
                      <value valueClass="string">Account </value>
                      <funcCall id="UniqueId">
                        <argument id="length">
                          <value class="value" valueClass="decimal">4</value>
                        </argument>
                      </funcCall>
                    </parts>
                  </value>
                </argument>
              </arguments>
              <parameterGeneratorProperties>
                <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand.ConnectionName">Admin</propertyValue>
                <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand.CustomObjectName">Account</propertyValue>
              </parameterGeneratorProperties>
              <generatedParameters>
                <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Account&amp;field=Name" name="Name" title="Name"/>
              </generatedParameters>
            </apiCall>
            <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexReadObject" name="ApexReadObject" parameterGeneratorUri="command:com.provar.plugins.forcedotcom.ui.commands.ReadCustomObjectTestStepCommand" testItemId="8" title="Read Object: Account = {AccountId}">
              <arguments>
                <argument id="objectType">
                  <value class="value" valueClass="string">Account</value>
                </argument>
                <argument id="resultName">
                  <value class="value" valueClass="string">AccountRead</value>
                </argument>
                <argument id="apexConnectionName">
                  <value class="value" valueClass="string">Admin</value>
                </argument>
                <argument id="objectId">
                  <value class="variable">
                    <path element="AccountId"/>
                  </value>
                </argument>
                <argument id="resultScope">
                  <value class="value" valueClass="string">Test</value>
                </argument>
              </arguments>
              <parameterGeneratorProperties>
                <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.ReadCustomObjectTestStepCommand.ConnectionName">Admin</propertyValue>
                <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.ReadCustomObjectTestStepCommand.CustomObjectName">Account</propertyValue>
              </parameterGeneratorProperties>
              <generatedParameters>
                <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Account&amp;field=Name" name="Name" title="Account Name"/>
                <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Account&amp;field=Id" name="Id" title="Account ID"/>
              </generatedParameters>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.io.Write" name="Write" testItemId="5" title="Write: {AccountRead}=&gt;templates/ExerciseData.xlsx">
              <arguments>
                <argument id="data">
                  <value class="variable">
                    <path element="AccountRead"/>
                  </value>
                </argument>
                <argument id="dataUrl">
                  <value class="excelTarget" sheetWriteMode="Update">
                    <workbookPath class="value" valueClass="string">templates/ExerciseData.xlsx</workbookPath>
                    <worksheetName class="value" valueClass="string">AccountId</worksheetName>
                  </value>
                </argument>
                <argument id="targetDescription">
                  <value class="value" valueClass="string">templates/ExerciseData.xlsx</value>
                </argument>
                <argument id="updateValueRange"/>
                <argument id="updateColumnNames">
                  <value class="value" valueClass="string">FirstRowOfRange</value>
                </argument>
                <argument id="updateMatchType">
                  <value class="value" valueClass="string">MatchColumns</value>
                </argument>
                <argument id="updateMatchLocator">
                  <value class="value" valueClass="string">Name</value>
                </argument>
              </arguments>
              <generatedParameters>
                <apiParam group="result" name="updateValueRange" title="Values Range">
                  <summary>The range of cells that needs to updated. If nothing is specified entire sheet is targeted</summary>
                  <type>
                    <textType>
                      <constraints>
                        <valueConstraint name="disableTemplateEditor">true</valueConstraint>
                      </constraints>
                    </textType>
                  </type>
                </apiParam>
                <apiParam group="result" name="updateColumnNames" title="Column Names">
                  <summary>Identifies where the column names are in the spreadsheet:</summary>
                  <defaultValue>FirstRowOfRange</defaultValue>
                  <type>
                    <choiceType>
                      <constraints>
                        <valueConstraint name="boundedValues">FirstRowOfRange:Across the first row|FirstColumnOfRange:Down the first column</valueConstraint>
                      </constraints>
                    </choiceType>
                  </type>
                </apiParam>
                <apiParam group="result" internal="true" name="updateMatchType" title="">
                  <summary/>
                  <defaultValue>RowOrColNumber</defaultValue>
                  <type>
                    <choiceType>
                      <constraints>
                        <valueConstraint name="boundedValues">RowOrColNumber:Match by Position|Where:Match on Condition|MatchColumns:Match by Columns</valueConstraint>
                      </constraints>
                    </choiceType>
                  </type>
                </apiParam>
                <apiParam group="result" manuallyResolved="true" name="updateMatchLocator" title="Match Locator">
                  <summary>Identifies which rows in the Range will be updated. \n It can either be a row number (where the first row = 1) or a filtering condition against one or more columns (e.g. {firstName = "Joe" and surname = "Bloggs"}.</summary>
                </apiParam>
              </generatedParameters>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.ForEach" name="ForEach" testItemId="9" title="For Each: {CaseData}=&gt;Row">
      <arguments>
        <argument id="list">
          <value class="variable">
            <path element="CaseData"/>
          </value>
        </argument>
        <argument id="fromItem">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="valueName">
          <value class="value" valueClass="string">Row</value>
        </argument>
        <argument id="continueOnFailure"/>
      </arguments>
      <parameterValueSources>
        <parameterValueSource variableName="CaseData" variableScope="Test">
          <cacheToken>/Users/clint.daniel/Provar/Demo/demo/templates/ExerciseData.xlsx;1551197038000</cacheToken>
          <cachedParameters>
            <apiParam name="Type"/>
            <apiParam name="Origin"/>
            <apiParam name="Account"/>
            <apiParam name="AccountId"/>
          </cachedParameters>
          <sourceValue class="excelTarget" namesLocation="FirstRowOfRange" whereComparison="EqualTo">
            <workbookPath class="value" valueClass="string">templates/ExerciseData.xlsx</workbookPath>
            <worksheetName class="value" valueClass="string">CaseData</worksheetName>
            <valuesRange class="value"/>
          </sourceValue>
        </parameterValueSource>
      </parameterValueSources>
      <clauses>
        <clause name="substeps" testItemId="10">
          <steps>
            <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexCreateObject" name="ApexCreateObject" parameterGeneratorUri="command:com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand" testItemId="15" title="Create Object: Case=&gt;CaseId">
              <arguments>
                <argument id="objectType">
                  <value class="value" valueClass="string">Case</value>
                </argument>
                <argument id="resultIdName">
                  <value class="value" valueClass="string">CaseId</value>
                </argument>
                <argument id="apexConnectionName">
                  <value class="value" valueClass="string">Admin</value>
                </argument>
                <argument id="assignmentRuleId"/>
                <argument id="resultScope">
                  <value class="value" valueClass="string">Test</value>
                </argument>
                <argument id="BusinessHoursId">
                  <value class="value" valueClass="string">01m6F000000VE4KQAW</value>
                </argument>
              </arguments>
              <parameterGeneratorProperties>
                <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand.ConnectionName">Admin</propertyValue>
                <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand.CustomObjectName">Case</propertyValue>
              </parameterGeneratorProperties>
              <generatedParameters>
                <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Case&amp;field=BusinessHoursId" name="BusinessHoursId" title="BusinessHoursId"/>
              </generatedParameters>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.If" name="If" testItemId="12" title="If: {Row.Account = &quot;Barton Barrett&quot;}">
              <arguments>
                <argument id="condition">
                  <value class="eq">
                    <lhs class="variable">
                      <path element="Row"/>
                      <path element="Account"/>
                    </lhs>
                    <rhs class="value" valueClass="string">Barton Barrett</rhs>
                  </value>
                </argument>
              </arguments>
              <clauses>
                <clause name="then" testItemId="13">
                  <steps>
                    <apiCall apiId="com.provar.plugins.bundled.apis.io.Write" name="Write" testItemId="14" title="Write: {Row}=&gt;templates/ExerciseData.xlsx">
                      <arguments>
                        <argument id="data">
                          <value class="variable">
                            <path element="Row"/>
                          </value>
                        </argument>
                        <argument id="dataUrl">
                          <value class="excelTarget" sheetWriteMode="Append">
                            <workbookPath class="value" valueClass="string">templates/ExerciseData.xlsx</workbookPath>
                            <worksheetName class="value" valueClass="string">BartonBarrett</worksheetName>
                          </value>
                        </argument>
                        <argument id="targetDescription">
                          <value class="value" valueClass="string">templates/ExerciseData.xlsx</value>
                        </argument>
                      </arguments>
                      <generatedParameters/>
                    </apiCall>
                  </steps>
                </clause>
              </clauses>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
  </steps>
</testCase>
