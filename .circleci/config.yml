version: 2.1

jobs:
    build:
        docker:
        #     # Use latest Provar image pushed to docker hub (private image)
        #     # all prerequisites for Provar testing
        #     # If you are building this, modify config file for building & using the image
            - image: provartesting/provar:provardx
              auth: 
                username: $DOCKERHUB_USERNAME 
                password: $DOCKERHUB_PASSWORD
              environment:
                # Set up environment variables here that donâ€™t need to be secure
                ENVIRONMENT: ProvarDX
                WORKSPACE: /root/ProvarProject
                CONNECTION_NAME: Admin
                DEV_HUB_USERNAME: michael.dailey@brave-otter-7uycux.com
                DEV_HUB_ALIAS: TrailheadHub
                CONSUMER_KEY: $CONSUMER_KEY_DEV_HUB
                PROVARDX_PROPERTY_FILE: provardx-properties-docker.json
                PROVAR_MAJOR_VERSION: latest
                PROVAR_DEFAULT_VERSION: latest
                PROVAR_SECRETS_PASSWORD: $SECRETS_PASSWORD
                JWT_SECRETS_KEY: $SECRETS_KEY
        # Specify service dependencies here if necessary
        # CircleCI maintains a library of pre-built images
        # documented at https://circleci.com/docs/2.0/circleci-images/
        # No further dependencies required for Provar
        working_directory: ~/ProvarDX

        steps:
            # Retrieve the contents of the repo
            - checkout

            # Only available in paid circleci option
            # - setup_remote_docker:
            #     docker_layer_caching: true 

            # Download and cache dependencies
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "provardx-properties-docker.json" }}
                    # fallback to using the latest cache if no exact match is found
                    - v1-dependencies-
            - run:
                name: "Create Secrets Key file for Dev Hub Authentication"
                command: echo $JWT_SECRETS_KEY > /home/secrets.key
                
            - run:
                name: "Create Scratch Org and Deploy Metadata"
                command: /home/create_scratch_org.sh
                working_directory: /home/ProvarDX
            
            - run:
                name: "Run Provar Tests"
                command: /home/run_provar_tests.sh
                working_directory: /home                

            - run:
                name: "Delete Scratch Org"
                command: /home/delete_scratch_org.sh
                working_directory: /home                

            # Compress artifacts 
            - run:
                name: Compress Artifacts
                command: tar -cvf test_results.tar ProvarDevOps/ANT/Results

            # Store Test Results (JUnit and zipped report)
            - store_test_results:
                path: "ProvarDevOps/ANT/Results/JUnit.xml"
            - store_artifacts:
                path: test_results.tar
                destination: Test_Results.zip