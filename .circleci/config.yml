version: 2.1

jobs:
    build:
        docker:
        #     # Use latest Provar image pushed to docker hub (private image)
        #     # all prerequisites for Provar testing
        #     # If you are building this, modify config file for building & using the image
            - image: provartesting/provar:provardx
              auth: 
                username: $DOCKERHUB_USERNAME 
                password: $DOCKERHUB_PASSWORD
              environment:
                # Set up environment variables here that donâ€™t need to be secure
                ENVIRONMENT: ProvarDX
                WORKSPACE: /root/ProvarDX/ProvarProject
                CONNECTION_NAME: Admin
                PROVARDX_PROPERTY_FILE: provardx-properties-docker.json
        # Specify service dependencies here if necessary
        # CircleCI maintains a library of pre-built images
        # documented at https://circleci.com/docs/2.0/circleci-images/
        # No further dependencies required for Provar
        working_directory: /root/ProvarDX

        steps:
            # Retrieve the contents of the repo
            - checkout

            # Only available in paid circleci option
            # - setup_remote_docker:
            #     docker_layer_caching: true 

            # Download and cache dependencies
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "provardx-properties-docker.json" }}
                    # fallback to using the latest cache if no exact match is found
                    - v1-dependencies-
            # - run:
            #     name: "Outputting working directory for debugging"
            #     command: ls -laR

            # - run:
            #     name: "Echoing env vars for debugging"
            #     command: printenv
            
            - run:
                name: "Create Secrets Key file for Dev Hub Authentication"
                command: echo $SECRETS_KEY > /root/ProvarDX/secrets.key
            
            - run:
                name: "Create Scratch Org and Deploy Metadata"
                command: /root/ProvarDX/create_scratch_org.sh
                working_directory: /root/ProvarDX
            
            - run:
                name: "Run Provar Tests"
                command: /root/ProvarDX/run_provar_tests.sh
                working_directory: /root/ProvarDX       

            - run:
                name: "Delete Scratch Org"
                command: /root/ProvarDX/delete_scratch_org.sh
                working_directory: /root/ProvarDX                

            # Store Test Results (JUnit and zipped report)
            - store_test_results:
                path: "/root/ProvarDX/ProvarProject/ANT/Results"