# This is a basic workflow to help you get started with Actions

name: Regression

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
    job_linux:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      env:
        scratch_org_alias: ProvarDX
        provar_major_version: latest
        provar_build_version: latest
        dev_hub_alias: SFDX-ENV
        provar_home: ${{ github.workspace }}/ProvarHome
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: 1.8
        - uses: actions/setup-node@v2.1.2  
        - uses: sfdx-actions/setup-sfdx@v1
          with:
            sfdx-auth-url: ${{ secrets.SFDX_AUTH_URL }}

        - name: Setup NPM
          run: npm install

        - name: Install ProvarDX SFDX Plugin
          run: |
            echo y | sfdx plugins:install @provartesting/provardx
            sfdx plugins:update

        - name: List Authenticated Orgs
          run: sfdx force:org:list --clean

        - name: Create SFDX Project with config
          run: |
              sfdx force:project:create -n ProvarDX
              cp project-scratch-def.json ProvarDX/config/project-scratch-def.json
              cp package.xml ProvarDX/package.xml
              cp .forceignore ProvarDX/.forceignore
              
        - name: Insert Secrets Password
          working-directory: $GITHUB_WORKSPACE
          run: ./insert_secrets_password.sh ${{ secrets.SECRETS_PASSWORD }} $GITHUB_WORKSPACE/provardx-properties-github.json

        - name: Create Scratch Org 
          working-directory: $GITHUB_WORKSPACE
          run: |
            sfdx force:org:create -f ProvarDX/config/project-scratch-def.json -a ${{ secrets.SCRATCH_ORG_ALIAS }}
            sfdx force:org:display -u ${{ secrets.SCRATCH_ORG_ALIAS }}

        - name: Deploy and Setup Dreamhouse App
          working-directory: $GITHUB_WORKSPACE
          run: ./setup_dreamhouse.sh ${{ secrets.SCRATCH_ORG_ALIAS }}

        - name: Update Scratch Org Admin Profile
          working-directory: $GITHUB_WORKSPACE/ProvarDX
          run: |
            sfdx force:mdapi:retrieve -r package -u ${{ env.dev_hub_alias }} -k package.xml
            unzip ./package/unpackaged.zip
            sfdx force:mdapi:convert --rootdir unpackaged --outputdir force-app
            sfdx force:source:push -u $scratch_org_alias -f

        - name: Download and Setup Provar CLI
          working-directory: $GITHUB_WORKSPACE
          run: |
            echo "Download Provar Libraries"
            wget -nv https://download.provartesting.com/${{ env.provar_major_version }}/Provar_ANT_${{ env.provar_build_version }}.zip
            echo "Unzip Provar ANT Files"
            unzip -q Provar_ANT_${{ env.provar_build_version }}.zip -d $GITHUB_WORKSPACE/ProvarHome
            cp -r $GITHUB_WORKSPACE/ProvarProject/provardx ${{ env.provar_home }}/provardx
            ls -la ${{ env.provar_home }}

        - name: Validate ProvarDX property file
          working-directory: $GITHUB_WORKSPACE
          run: sfdx provar:validate -p provardx-properties-github.json

        - name: Compile Provar Project
          working-directory: $GITHUB_WORKSPACE
          run: sfdx provar:compile -p provardx-properties-github.json

        - name: Reload Metadata Cache
          working-directory: $GITHUB_WORKSPACE
          run: sfdx provar:metadatacache -m 'reload' -c '.provarCaches' -p provardx-properties-github.json

        - name: Run Provar Tests
          working-directory: $GITHUB_WORKSPACE
          run: echo y | xvfb-run sfdx provar:runtests -p provardx-properties-github.json

        - name: Delete Scratch Org
          run: sfdx force:org:delete -u ${{ env.scratch_org_alias }} --noprompt

        # Publish Test Results
        - name: Publish JUnit Test Report
          uses: mikepenz/action-junit-report@v1
          with:
            report_paths: '**/Results/*.xml'
            github_token: ${{ secrets.GITHUB_TOKEN }}
            check_name: "Provar Regression Test Report"
